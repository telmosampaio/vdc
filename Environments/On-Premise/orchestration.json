{
    "ModuleConfigurationsPath": "../../Modules",
    "ModuleConfigurations": [
        {
            "Name": "DiagnosticStorageAccount",
            "ModuleDefinitionName": "StorageAccounts",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.DiagnosticStorageAccount.ResourceGroup}",
            "Comments": "Storage Account that is used for ...",
            "Version": "2.0",
            "Policies": {
                "Comments": "Optional - If no object is specified, no Policies deployment will occur",
                "OverrideParameters": {
                    "effect": {
                        "value": "${Parameters.ModuleConfigurationParameters.DiagnosticStorageAccount.Policies.Effect}"
                    },
                    "resourceGroup": {
                        "value": "${Parameters.ModuleConfigurationParameters.DiagnosticStorageAccount.ResourceGroup}"
                    },
                    "resourceGroupLocation": {
                        "value": "${Parameters.ModuleConfigurationParameters.DiagnosticStorageAccount.Location}"
                    }
                }
            },
            "Deployment": {
                "Comments": "We need the 'update' module instance to lock this resource after the Virtual Network got created",
                "TemplatePath": "../../Modules/StorageAccounts/2.0/deploy.json",
                "OverrideParameters": {
                    "storageAccountName": {
                        "value": "${Parameters.ModuleConfigurationParameters.DiagnosticStorageAccount.Name}"
                    },
                    "storageAccountSku": {
                        "value": "${Parameters.ModuleConfigurationParameters.DiagnosticStorageAccount.Sku}"
                    },
                    "location": {
                        "value": "${Parameters.ModuleConfigurationParameters.DiagnosticStorageAccount.Location}"
                    }
                }
            }
        },
        {
            "Name": "LogAnalytics",
            "ModuleDefinitionName": "LogAnalytics",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.LogAnalytics.ResourceGroup}",
            "DependsOn": [
                "DiagnosticStorageAccount"
            ],
            "Deployment": {
                "OverrideParameters": {
                    "logAnalyticsWorkspaceName": {
                        "value": "${Parameters.ModuleConfigurationParameters.LogAnalytics.Name}"
                    },
                    "diagnosticStorageAccountName": {
                        "value": "reference(DiagnosticStorageAccount.storageAccountName)"
                    },
                    "diagnosticStorageAccountId": {
                        "value": "reference(DiagnosticStorageAccount.storageAccountResourceId)"
                    },
                    "diagnosticStorageAccountAccessKey": {
                        "value": "reference(DiagnosticStorageAccount.storageAccountAccessKey)"
                    },
                    "location": {
                        "value": "${Parameters.ModuleConfigurationParameters.LogAnalytics.Location}"
                    }
                }
            }
        },
        {
            "Name": "OnPremisesNSG",
            "ModuleDefinitionName": "NetworkSecurityGroups",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.Network.ResourceGroup}",
            "DependsOn": [
                "DiagnosticStorageAccount", "LogAnalytics"
            ],
            "Deployment": {
                "OverrideParameters": {
                    "workspaceId": {
                        "value": "reference(LogAnalytics.logAnalyticsWorkspaceResourceId)"
                    },
                    "diagnosticStorageAccountId": {
                        "value": "reference(DiagnosticStorageAccount.storageAccountResourceId)"
                    },
                    "networkSecurityGroupName": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.NetworkSecurityGroups[0].Name}"
                    },
                    "networkSecurityGroupSecurityRules": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.NetworkSecurityGroups[0].Rules}"
                    }
                }
            }
        },
        {
            "Name": "DomainControllerASG",
            "ModuleDefinitionName": "ApplicationSecurityGroups",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.ApplicationSecurityGroups.ResourceGroup}",
            "DependsOn": [],
            "Deployment": {
                "OverrideParameters": {
                    "applicationSecurityGroupName": {
                        "value": "${Parameters.ModuleConfigurationParameters.ApplicationSecurityGroups.DomainController.Name}"
                    }
                }
            }
        },
        {
            "Name": "VirtualNetwork",
            "ModuleDefinitionName": "vNet",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.Network.ResourceGroup}",
            "DependsOn": [
                "OnPremisesNSG"
            ],
            "Deployment": {
                "OverrideParameters": {
                    "vnetName": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.Name}"
                    },
                    "vnetAddressPrefixes": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.AddressPrefix}"
                    },
                    "subnets": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.Subnets}"
                    },
                    "enableDdosProtection": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.EnableDdosProtection}"
                    },
                    "enableVmProtection": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.EnableVmProtection}"
                    }
                }
            }
        },
        {
            "Name": "KeyVault",
            "ModuleDefinitionName": "KeyVault",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.KeyVault.ResourceGroup}",
            "DependsOn":[
                "VirtualNetwork", 
                "DiagnosticStorageAccount", 
                "LogAnalytics"
            ],
            "Deployment": {
                "OverrideParameters": {
                    "keyVaultName": {
                        "value": "${Parameters.ModuleConfigurationParameters.KeyVault.Name}"
                    },
                    "accessPolicies": {
                        "value": "${Parameters.ModuleConfigurationParameters.KeyVault.AccessPolicies}"
                    },
                    "secretsObject": {
                        "value": {
                            "secrets": "${Parameters.ModuleConfigurationParameters.KeyVault.SecretsObject.Secrets}"
                        }
                    },
                    "enableVaultForDeployment": {
                        "value": "${Parameters.ModuleConfigurationParameters.KeyVault.EnableVaultForDeployment}"
                    },
                    "enableVaultForDiskEncryption": {
                        "value": "${Parameters.ModuleConfigurationParameters.KeyVault.EnableVaultForDiskEncryption}"
                    },
                    "enableVaultForTemplateDeployment": {
                        "value": "${Parameters.ModuleConfigurationParameters.KeyVault.EnableVaultForTemplateDeployment}"
                    },
                    "vaultSku": {
                        "value": "${Parameters.ModuleConfigurationParameters.KeyVault.Sku}"
                    },
                    "diagnosticStorageAccountId": {
                        "value": "reference(DiagnosticStorageAccount.storageAccountResourceId)"
                    },
                    "workspaceId": {
                        "value": "reference(LogAnalytics.logAnalyticsWorkspaceResourceId)"
                    },
                    "networkAcls": {
                        "value": "${Parameters.ModuleConfigurationParameters.KeyVault.NetworkAcls}"
                    },
                    "vNetId": {
                        "value": "reference(VirtualNetwork.vNetResourceId)"
                    }
                }
            }
        },
        {
            "Name": "CreateRootCertificate",
            "Comments": "Create Root Certificate",
            "Script": {
                "Command": "../../Modules/VirtualNetworkGateway/2.0/Scripts/virtual.network.gateway.rootcert.ps1",
                "Arguments" : {
                    "TenantId": "${Subscriptions.OnPremises.TenantId}",
                    "ServicePrincipal_ID": "env(SCRIPT_EXECUTION_SP_ID)",
                    "ServicePrincipal_Secret": "env(SCRIPT_EXECUTION_SP_KEY)",
                    "KeyVaultName" : "${Parameters.ModuleConfigurationParameters.KeyVault.Name}",
                    "KeyName" : "CACert"
                }
            }
        },
        {
            "Name": "VirtualNetworkGateway",
            "ModuleDefinitionName": "VirtualNetworkGateway",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.Network.ResourceGroup}",
            "DependsOn": [
                "VirtualNetwork"
            ],
            "Deployment": {
                "OverrideParameters": {
                    "virtualNetworkGatewayName": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.VirtualGateway.Name}"
                    },
                    "virtualNetworkGatewayType": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.VirtualGateway.GatewayType}"
                    },
                    "virtualNetworkGatewaySku": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.VirtualGateway.GatewaySku}"
                    },
                    "vpnType": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.VirtualGateway.VpnType}"
                    },
                    "vNetId": {
                        "value": "reference(VirtualNetwork.vNetResourceId)"
                    },
                    "vpnClientAddressPoolPrefix": {
                        "value": "10.10.8.0/24"
                    },
                    "clientRootCertData": "${Parameters.ModuleConfigurationParameters.Network.VirtualGateway.VpnClientConfiguration.VpnClientRootCertificateData}",
                    "clientRevokedCertThumbprint": {
                        "value": "${Parameters.ModuleConfigurationParameters.Network.VirtualGateway.VpnClientConfiguration.VpnClientRevokedCertificateThumbprint}"
                    }
                }
            }
        },
        {
            "Name": "ArtifactsStorageAccount",
            "Subscription": "Artifacts",
            "ModuleDefinitionName": "StorageAccounts",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.ArtifactsStorageAccount.ResourceGroup}",
            "DependsOn": [],
            "Comments": "Storage Account that is used for ...",
            "Policies": {
                "Comments": "Optional - If no object is specified, no Policies deployment will occur",
                "OverrideParameters": {
                    "effect": {
                        "value": "${Parameters.ModuleConfigurationParameters.ArtifactsStorageAccount.Policies.Effect}"
                    },
                    "resourceGroup": {
                        "value": "${Parameters.ModuleConfigurationParameters.ArtifactsStorageAccount.ResourceGroup}"
                    },
                    "resourceGroupLocation": {
                        "value": "${Parameters.ModuleConfigurationParameters.ArtifactsStorageAccount.Location}"
                    }
                }
            },
            "Deployment": {
                "OverrideParameters": {
                    "storageAccountName": {
                        "value": "${Parameters.ModuleConfigurationParameters.ArtifactsStorageAccount.Name}"
                    },
                    "storageAccountSku": {
                        "value": "${Parameters.ModuleConfigurationParameters.ArtifactsStorageAccount.Sku}"
                    }
                }
            }
        },
        {
            "Name": "UploadScriptsToArtifactsStorage",
            "Comments": "Upload Scripts to Artifacts Storage",
            "DependsOn": [ 
                "ArtifactsStorageAccount"
            ],
            "Script": {
                "Command": "Write-Host 'Adding Scripts...'; Import-Module -Name Az.Storage; $ctx = New-AzStorageContext -StorageAccountName reference(ArtifactsStorageAccount.storageAccountName) -SasToken '?reference(ArtifactsStorageAccount.storageAccountSasToken)'; New-AzRmStorageContainer -Name scripts -ResourceGroupName reference(ArtifactsStorageAccount.storageAccountResourceGroup) -StorageAccountName reference(ArtifactsStorageAccount.storageAccountName); Get-ChildItem -LiteralPath '../../Scripts/Windows' -File -Recurse | % { Set-AzStorageBlobContent -Context $ctx -Container scripts -Force -File $($_.FullName) -Blob Windows/$($_.Name)}",
                "Arguments" : {
                }
            }
        },
        {
            "Name": "ActiveDirectory",
            "ModuleDefinitionName": "ActiveDirectory",
            "ResourceGroupName": "${Parameters.ModuleConfigurationParameters.ActiveDirectory.ResourceGroup}",
            "DependsOn": [
                "VirtualNetwork", "DomainControllerASG", "UploadScriptsToArtifactsStorage"
            ],
            "Deployment": {
                "OverrideParameters": {
                    "virtualMachineName": {
                        "value": "kn${Parameters.DeploymentName}vm"
                    },
                    "virtualMachineSize": {
                        "value": "Standard_DS2_v2"
                    },
                    "virtualMachineOSImage": {
                        "value": {
                            "offer": "WindowsServer",
                            "publisher": "MicrosoftWindowsServer",
                            "sku": "2016-Datacenter"
                        }
                    },
                    "artifactsStorageAccountSasKey": {
                        "value": "reference(ArtifactsStorageAccount.storageAccountSasToken)"
                    },
                    "artifactsStorageAccountName": {
                        "value": "reference(ArtifactsStorageAccount.storageAccountName)"
                    },
                    "artifactsStorageAccountKey": {
                        "value": "reference(ArtifactsStorageAccount.storageAccountAccessKey)"
                    },
                    "workspaceId": {
                        "value": "reference(LogAnalytics.logAnalyticsWorkspaceId)"
                    },
                    "logAnalyticsWorkspacePrimarySharedKey": {
                        "value": "reference(LogAnalytics.logAnalyticsPrimarySharedKey)"
                    },
                    "diagnosticsStorageAccountName": {
                        "value": "reference(DiagnosticStorageAccount.storageAccountName)"
                    },
                    "diagnosticsStorageAccountSasToken": {
                        "value": "reference(DiagnosticStorageAccount.storageAccountSasToken)"
                    },
                    "adIpAddress": {
                        "value": "${Parameters.ModuleConfigurationParameters.ActiveDirectory.PrimaryDCIP}"
                    },
                    "vNetId": {
                        "value": "reference(VirtualNetwork.vNetResourceId)"
                    },
                    "domainControllerAsgId": {
                        "value": "reference(DomainControllerASG.applicationSecurityGroupResourceId)"
                    },
                    "subnetName": {
                        "value": "default"
                    },
                    "cloudZone": {
                        "value": "${Parameters.ModuleConfigurationParameters.ActiveDirectory.CloudZone}"
                    },
                    "domainName": {
                        "value": "${Parameters.ModuleConfigurationParameters.ActiveDirectory.DomainName}"
                    },
                    "adSitename": {
                        "value": "${Parameters.ModuleConfigurationParameters.ActiveDirectory.ADSitename}"
                    },
                    "domainAdminUsername": {
                        "value": "${Parameters.ModuleConfigurationParameters.ActiveDirectory.DomainAdminUser}"
                    },
                    "domainAdminPassword": {
                        "value": "${Parameters.ModuleConfigurationParameters.ActiveDirectory.DomainAdminPassword}"
                    }
                }
            }
        }
    ]
}