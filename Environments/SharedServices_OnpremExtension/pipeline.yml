# VDC Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
# Set variables once
variables:
- group: VDC_SECRETS
- name: bootstrap_initialized
  value: 'sample'    # this is available to all jobs
trigger:
- master
stages:
- stage: Deploy
  jobs:
  - job: DiagnosticStorageAccount
    timeoutInMinutes: 0
    pool:
      name: 'vdc-self-hosted'
    steps:
    - task: AzurePowerShell@4
      displayName: "Diagnostic Storage Account" 
      inputs:
        azureSubscription: 'vdc2-testsub'
        ScriptType: 'FilePath'
        ScriptPath: 'Orchestration/OrchestrationService/ModuleConfigurationDeployment.ps1'
        ScriptArguments: '-DefinitionPath "Environments/SharedServices_OnpremExtension/definition.json" -ModuleConfigurationName "DiagnosticStorageAccount"'
        azurePowerShellVersion: 'LatestVersion'
      env:
        VDC_SUBSCRIPTIONS: $(VDC_SUBSCRIPTIONS)
        VDC_TOOLKIT_SUBSCRIPTION: $(VDC_TOOLKIT_SUBSCRIPTION)
        DEPLOYMENT_USER_ID: $(DEPLOYMENT_USER_ID)
        ADMIN_USER_PWD: $(ADMIN_USER_PWD)
        DOMAIN_ADMIN_USER_PWD: $(DOMAIN_ADMIN_USER_PWD)
        TENANT_ID: $(TENANT_ID)
    - task: PowerShell@2
      displayName: "Sets multi-job variable"
      name: "bootstratInitializedOutput"
      inputs:
        targetType: 'inline'
        script: '

          $bootstrapInitialized = $ENV:BOOTSTRAP_INITIALIZED;

          Write-Host "##vso[task.setvariable variable=BOOTSTRAP_INITIALIZED;isOutput=true]$bootstrapInitialized";'
        pwsh: true